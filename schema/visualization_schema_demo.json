{
	"sequence_variant - eQTL_of - gene": {
		"specific - relation - general": {
         "questions": [
        "Which {genes@gene} have {variant identifier@sequence_variant} as their {eQTLs@eqtl_of}?"
        ],
        "cyper_for_inter":
            "MATCH (snp_node:sequence_variant)-[r:fine_mapped_eQTL_of]->(gene_node:gene) WHERE snp_node.id = '@sequence_variant' RETURN snp_node, r, gene_node"
	,
	"cyper_for_exact":[
            "?MATCH (g:gene {id: "@n1:gene"})-[r]-(neighbor) RETURN g.id AS GeneID, type(r) AS RelationshipType, collect(neighbor.id) AS NeighborIDs"
	]
	,
        "next_questions": [
                "Which {function ontologies@ontology} are linked to {gene identifier@n1:gene}?",
                "In which {disease/phenotype/ontology@ontology} is {gene identifier@n1:gene} {expressed@express_in}?"
            ],
        "visualizations": [
            "Gene-SNP p-value Genome Browser - Statistics",
            "Gene Association and Regulation Browser - Gene"
        ]
    },
		"general - relationship - specific": {
        "questions": [
            "Which {SNP@sequence_variant} has {gene@gene} as its {eQTL@eqtl_of}?"
        ],
        "open_cyper":"MATCH (n1:sequence_variant)-[r:eQTL_of]->(n2:gene) WHERE n2.id = '@gene' RETURN n1, r, n2"
	,
	"extend_cyper":[
            "MATCH (g:gene {id: "@n1:gene"})-[r]-(neighbor) RETURN g.id AS GeneID, type(r) AS RelationshipType, collect(neighbor.id) AS NeighborIDs"
	]
        "next_questions": [
                "Which {function ontologies@ontology} are linked to {gene identifier@n1:gene}?",
                "In which {disease/phenotype/ontology@ontology} is {gene identifier@n1:gene} {expressed@express_in}?"
            ],
        "visualizations": [
            "Gene-SNP p-value Genome Browser - Statistics",
            "Gene Association and Regulation Browser - Gene"
        ]
        }
    }
}
