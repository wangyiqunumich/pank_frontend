{"version":3,"sources":["img/glkb_home_logo.png","img/MedSchoolLogo.png","components/HomePage/index.jsx","service/Cypher.jsx","service/Detail.jsx","img/glkb_logo.png","img/um_logo.jpg","components/Settings/view.jsx","components/Settings/filter.jsx","service/NewNode.jsx","components/Settings/table.jsx","components/Settings/index.jsx","components/Graph/index.jsx","components/Information/term.jsx","components/Information/index.jsx","components/ResultPage/index.jsx","index.js"],"names":["HomePage","Input","Search","nevigate","useNavigate","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","v","alltags","wrap","_context","prev","next","tags","join","console","log","concat","stop","_x","apply","arguments","_useState","useState","_useState2","_slicedToArray","setTags","_useState3","_useState4","inputVisible","setInputVisible","_useState5","_useState6","inputValue","setInputValue","useEffect","_inputRef$current","inputRef","current","focus","handleInputConfirm","indexOf","_toConsumableArray","tagChild","map","tag","tagElem","_jsx","Tag","className","closable","onClose","e","preventDefault","removedTag","newTags","filter","handleClose","style","border","borderRadius","children","display","_jsxs","src","GLKBLogoImg","height","marginBottom","TweenOneGroup","enter","scale","opacity","type","duration","onEnd","target","leave","width","appear","onClick","size","placeholder","value","onChange","onBlur","onPressEnter","MedSchoolLogo","CypherService","_classCallCheck","_createClass","key","_Article2Cypher","content","res","headers","params","query","axios","get","then","response","catch","error","abrupt","DetailService","_Nid2Detail","nid","_Eid2Detail","_callee2","Eid","_context2","_x2","Collapse","Panel","Filter","props","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","expandIconPosition","ghost","defaultActiveKey","header","Row","Col","span","InputNumber","defaultValue","minGtdcFreq","gtdcFreq","handleGtdcFreq1","min","max","maxGtdcFreq","handleGtdcFreq2","Slider","range","handleGtdcFreq","adcPd","handleAdcPd1","minAdcPd","maxAdcPd","handleAdcPd2","handleAdcPd","minGtdcNoc","gtdcNoc","handleGtdcNoc1","maxGtdcNoc","handleGtdcNoc2","handleGtdcNoc","NewGraph","_AddNodes","existing","newNode","App","graphNodes","data","nodes","i","length","push","id","existingNodes","groupedNodes","allNodes","forEach","node","index","split","title","name","Object","values","initRightTreeData","_loop","label","labelData","find","group","targetKeys","setTargetKeys","rightTreeData","setRightTreeData","existingNodeList","child","treeData","tableClass","isTableOpen","generateTree","checkedKeys","undefined","_objectWithoutProperties","_excluded","_objectSpread","disabled","includes","dealCheckboxSeleted","_ref2","direction","onItemSelect","onItemSelectAll","checked","halfCheckedKeys","_node$node","keys","state","item","_item$childCompanies","_temp","childCompanies","some","t","parentKey","tree","_tree$children2","parentKeys","_tree$children","TreeTransfer","_ref3","dataSource","restProps","_excluded2","transferDataSource","dataSourceData","test","flatten","Transfer","showSearch","showSelectAll","render","rowKey","record","onSearch","dir","val","newDeptList","_item$children","assign","_item$children2","_item$children3","_ref4","selectedKeys","Tree","blockNode","checkable","defaultExpandAll","fieldNames","onCheck","_","onSelect","_drawNewGraph","detailServ","newData","AddNodes","sent","JSON","parse","stringify","links","edges","setData","marginLeft","alignItems","Button","toggleTable","moveKeys","changeArrType","_item$children4","_item$children5","splice","arr","_arr","_arr$index","_arr$index$children","_data$children","findIndex","_data$children2","_Object$keys","selectedParentKey","selectedObj","_arr$_index$children","oldChildArr","selectedIndex","o","getRightTreeData","rightTreeDataList","rightTreeNodes","drawNewGraph","setGraphData","Settings","settingsClass","isOpen","buttonClass","minAdcFreq","maxAdcFreq","minAdcNoc","maxAdcNoc","adcFreq","handleAdcFreq","handleAdcFreq1","handleAdcFreq2","adcNoc","handleAdcNoc","handleAdcNoc1","handleAdcNoc2","setVisibleArticles","setVisibleTerms","setVisibleRelations","articleNodes","termNodes","relationNodes","visibleArticles","visibleTerms","visibleRelations","toggleSidebar","MenuFoldOutlined","MenuUnfoldOutlined","Table","Cytoscape","use","fcose","cola","euler","d3Force","springy","Graph","_step","curMinAdcFreq","Number","MAX_SAFE_INTEGER","curMaxAdcFreq","MIN_SAFE_INTEGER","curMinAdcPd","curMaxAdcPd","curMinAdcNoc","curMaxAdcNoc","curMinGtdcFreq","curMaxGtdcFreq","curMinGtdcNoc","curMaxGtdcNoc","articleArray","termArray","relationArray","articleSet","Set","termSet","relationSet","_iterator","_createForOfIteratorHelper","s","n","done","Math","frequency","date","n_citation","has","temp","toString","description","add","err","f","_step2","_iterator2","dates","year","handleMinAdcFreq","handleMaxAdcFreq","handleMinAdcPd","handleMaxAdcPd","handleMinAdcNoc","handleMaxAdcNoc","handleMinGtdcFreq","handleMaxGtdcFreq","handleMinGtdcNoc","handleMaxGtdcNoc","setArticleNodes","setTermNodes","setRelationNodes","articleView","termView","articleTermView","source","graphData","useMemo","elements","_loop2","edge","weight","j","pair","styleSheet","selector","shape","labelColor","backgroundColor","backgroundOpacity","color","fontSize","CytoscapeComponent","normalizeElements","zoomingEnabled","maxZoom","minZoom","autounselectify","boxSelectionEnabled","layout","egdeLengthVal","nodeSpacing","bundleEdges","animate","animationDuration","stylesheet","cy","unbind","on","sel","isNode","visibility","removeClass","difference","outgoers","union","incomers","not","addClass","informationOpen","handleInformation","closeTable","bind","evt","handleSelect","Term","Information","informationClass","relatedClass","nodeDetail","setNodeDetail","edgeDetail","setEdgeDetail","handleClick","event","link","window","open","_searchInfoNode","Nid2Detail","_searchInfoEdge","Eid2Detail","detailId","Array","isArray","searchInfoEdge","searchInfoNode","urls","url","href","edgeUrls","element_id","aliases","external_sources","renderExternal","node1","node2","ResultPage","otags","URLSearchParams","location","search","detailType","setDetailType","detail","setDetailId","setAllNodes","_useState13","_useState14","_useState15","_useState16","view","setView","_useState17","Infinity","_useState18","setMinAdcFreq","_useState19","_useState20","setMaxAdcFreq","_useState21","_useState22","setMinAdcPd","_useState23","_useState24","setMaxAdcPd","_useState25","_useState26","setMinAdcNoc","_useState27","_useState28","setMaxAdcNoc","_useState29","_useState30","setMinGtdcFreq","_useState31","_useState32","setMaxGtdcFreq","_useState33","_useState34","setMinGtdcNoc","_useState35","_useState36","setMaxGtdcNoc","_useState37","_useState38","setAdcFreq","_useState39","_useState40","setAdcPd","_useState41","_useState42","setAdcNoc","_useState43","_useState44","setGtdcFreq","_useState45","_useState46","setGtdcNoc","_useState47","_useState48","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","setResults","_useState61","_useState62","setArticles","_useState63","_useState64","setLabel","_useState65","_useState66","searchFlag","setSearchFlag","_useState67","_useState68","setArticleFlag","_useState69","_useState70","setQuery","_useState71","_useState72","settingsOpen","setSettingsOpen","_useState73","_useState74","setInformationOpen","_useState75","_useState76","tableOpen","setTableOpen","_useState77","_useState78","graphShownData","setGraphShownData","parsed","slice","initialize","_search","_callee4","cypherServ","_context4","Article2Cypher","_handleSelect","_callee6","temp_id","_context6","article_source","eid","nodeIdsToKeep","filteredNodes","filteredEdges","backHome","_x5","enterButton","UMLogo","justifyContent","textAlign","padding","background","marginRight","Spin","_x3","handleView","parseInt","ReactDOM","Router","Routes","Route","path","element","eaxt","document","getElementById"],"mappings":"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","file":"static/js/main.8a5433f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/glkb_home_logo.b7fe247f.png\";","export default __webpack_public_path__ + \"static/media/MedSchoolLogo.65898f5f.png\";","import React, { useEffect, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport 'antd/dist/reset.css';\nimport { TweenOneGroup } from \"rc-tween-one\";\nimport {Input, Tag} from 'antd';\nimport './scoped.css'\nimport GLKBLogoImg from '../../img/glkb_home_logo.png'\nimport MedSchoolLogo from '../../img/MedSchoolLogo.png'\nimport { DingtalkCircleFilled } from '@ant-design/icons';\n\nconst { Search } = Input;\n\nconst HomePage = () => {\n    let nevigate = useNavigate();\n    const handleSearch = async (v) => {\n        const alltags = tags.join(\"|\")\n        console.log(alltags)\n        // console.log(v)\n        nevigate(`/result?q=${alltags}`)\n    }\n\n    const [tags, setTags] = useState([]);\n    const [inputVisible, setInputVisible] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    useEffect(() => {\n        if (inputVisible) {\n        inputRef.current?.focus();\n        }\n    }, [inputVisible]);\n\n    const handleClose = (removedTag) => {\n        const newTags = tags.filter((tag) => tag !== removedTag);\n        console.log(newTags);\n        setTags(newTags);\n    };\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleInputConfirm = () => {\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n        setTags([...tags, inputValue]);\n        }\n        setInputVisible(false);\n        setInputValue(\"\");\n    };\n\n    const forMap = (tag) => {\n        const tagElem = (\n        <Tag\n            className='tag-box'\n            closable\n            onClose={(e) => {\n            e.preventDefault();\n            handleClose(tag);\n            }}\n            style={{ border: '1px solid #4F4F4F', borderRadius: '18px' }}\n        >\n            {tag}\n        </Tag>\n        );\n        return (\n        <span key={tag} style={{ display: \"inline-block\" }}>\n            {tagElem}\n        </span>\n        );\n    };\n\n    const tagChild = tags.map(forMap);\n\n    return (\n    <div className=\"home-container\">\n        <div className=\"home-head-container\">\n            <img src={GLKBLogoImg} style={{ height: 100 }} />\n            <div className=\"head-text\">\n                A database and data mining platform for biomedical\n                literature\n            </div>\n            <div className='search-container'>\n                <div className='termContainer'>\n                    <h2>Terms</h2>\n                    <div style={{ marginBottom: 16 }}>\n                    <TweenOneGroup\n                        enter={{\n                            scale: 0.8,\n                            opacity: 0,\n                            type: \"from\",\n                            duration: 100\n                        }}\n                        onEnd={(e) => {\n                            if (e.type === \"appear\" || e.type === \"enter\") {\n                                e.target.style = \"display: inline-block\";\n                            }\n                        }}\n                        leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n                        appear={false}\n                        >\n                        {tagChild}\n                        </TweenOneGroup>\n                    </div>\n                </div>\n                <button onClick={handleSearch} className='map-button'>\n                    Map Terms!\n                </button>\n                <Input\n                        type=\"text\"\n                        size=\"large\"\n                        placeholder=\"Input terms here, hit enter to confirm the term\"\n                        className='search-bar'\n                        value={inputValue}\n                        onChange={handleInputChange}\n                        onBlur={handleInputConfirm}\n                        onPressEnter={handleInputConfirm}\n                    />\n            </div>\n        </div>\n        {/* <div className=\"feature-container\">\n            <div className=\"feature-heading\">\n                    Features\n            </div>\n        </div>\n        <div className=\"bar\"></div>\n        <div className=\"credits-container\">\n            <div className=\"credits-heading\">\n                    Credits:\n            </div>\n        </div> */}\n        <div className=\"footer-container\">\n            <div className=\"UMichLogo-container\">\n                <img src={MedSchoolLogo} style={{ height: 100 }} />\n            </div>\n            <div className=\"Department-container\">\n                Department of\n                Computational Medicine\n                and Bioinformatics\n            </div>\n            <div className=\"contact-container\">\n                <div className=\"contact-heading\">\n                    Contacts:\n                </div>\n            </div>\n            <div className=\"address-container\">\n                Palmer Commons 2035D, Ann Arbor, MI 48109\n            </div>\n            <div className=\"footnote-container\">\n                This website is free and open to all users and there is no login requirement. User cookies are not collected.\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default HomePage","import axios from 'axios'\n\nexport class CypherService {\n    constructor() {}\n    async Article2Cypher(content) {\n        console.log('article to cypher')\n        console.log(content)\n        let res = []\n        var config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            params: {\n                query: content\n            }\n        }\n        await axios\n            .get(\"/api/1.0/frontend_term2graph?query=\" + content)\n            // .get(\"/1.0/frontend_term2graph?query=\" + content)\n            // .get('/1.0/frontend_term2graph', config)\n            .then(function (response) {\n                res = response\n            })\n            .catch(function (error) {\n                console.log('error', error)\n            })\n        return res\n    }\n}","import { ConsoleSqlOutlined } from '@ant-design/icons'\nimport axios from 'axios'\n\nexport class DetailService {\n    constructor() {}\n    async Nid2Detail(nid) {\n        console.log('node to detail')\n        let res = []\n        await axios\n            // .get('/1.0/frontend_node_detail/' + nid)\n            .get('/api/1.0/frontend_node_detail/' + nid)\n            .then(function (response) {\n                res = response\n            })\n            .catch(function (error) {\n                console.log('error', error)\n            })\n        return res\n    }\n    async Eid2Detail(Eid) {\n        console.log('edge to detail')\n        let res = []\n        await axios\n            // .get('/1.0/frontend_rel_detail/' + Eid)\n            .get('/api/1.0/frontend_rel_detail/' + Eid)\n            .then(function (response) {\n                res = response\n            })\n            .catch(function (error) {\n                console.log('error', error)\n            })\n        return res\n    }\n}","export default __webpack_public_path__ + \"static/media/glkb_logo.98cc616c.png\";","export default __webpack_public_path__ + \"static/media/um_logo.3d55f8ef.jpg\";","import React, { useState } from 'react'\nimport './scoped.css'\nimport { Row, Col, Checkbox, Collapse, Radio, Cascader } from 'antd';\nconst { Panel } = Collapse;\nconst View = props => {\n    let Anatomy = []\n    let Chemicals = []\n    let Diseases = []\n    let GO = []\n    let Genes = []\n    let Journal = []\n    let Organisms = []\n    let Pathway = []\n    for (let term of props.termNodes) {\n        if (term.label == \"Anatomy\") {\n            Anatomy.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"Chemicals and Drugs\") {\n            Chemicals.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"Diseases\") {\n            Diseases.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"GO\") {\n            GO.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"Genes and Gene Products\") {\n            Genes.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"Journal\") {\n            Journal.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"Organisms\") {\n            Organisms.push({label: term.title, value: term.title})\n        }\n        if (term.label == \"Pathway\") {\n            Pathway.push({label: term.title, value: term.title})\n        }\n    }\n    const nodeOptions = [\n        {\n            label: 'Articles',\n            value: 'Articles'\n        },\n        {\n            label: 'Anatomy',\n            value: 'Anatomy',\n            children: Anatomy\n        },\n        {\n            label: 'Chemicals and Drugs',\n            value: 'Chemicals and Drugs',\n            children: Chemicals\n        },\n        {\n            label: 'Diseases',\n            value: 'Diseases',\n            children: Diseases\n        },\n        {\n            label: 'GO',\n            value: 'GO',\n            children: GO\n        },\n        {\n            label: 'Genes and Gene Products',\n            value: 'Genes and Gene Products',\n            children: Genes\n        },\n        {\n            label: 'Journal',\n            value: 'Journal',\n            children: Journal\n        },\n        {\n            label: 'Organisms',\n            value: 'Organisms',\n            children: Organisms\n        },\n        {\n            label: 'Pathway',\n            value: 'Pathway',\n            children: Pathway\n        },\n    ];\n\n    // setVisibleArticles={props.setVisibleArticles}\n    // setVisibleTerms={props.setVisibleTerms}\n    // setVisibleRelations={props.setVisibleRelations}\n\n    const onChangeNode = (value) => {\n        let tempArticles = []\n        let tempTerms = []\n        for (let tempArray of value) {\n            if (tempArray.length == 1) {\n                if (tempArray[0] == 'Articles') {\n                    tempArticles = props.articleNodes;\n                } else {\n                    for (let node of props.termNodes) {\n                        if (node.label == tempArray[0]) {\n                            tempTerms.push(node.title)\n                        }\n                    }\n                }\n            } else {\n                tempTerms.push(tempArray[1]);\n            }\n        }\n        console.log(tempTerms)\n        props.setVisibleArticles(tempArticles);\n        const filteredTerms = props.termNodes.filter(item => tempTerms.includes(item.title));\n        props.setVisibleTerms(filteredTerms);\n    };\n\n    const onChangeEdge = (value) => {\n        const obj = {};\n        value.forEach((title, index) => {\n            obj[index] = {key: (index + 1).toString(), title:title[0]};\n        });\n        var arr = []\n        var i = 0\n        for (var item in obj) {\n            arr[i] = obj[item]\n            i++\n        }\n        props.setVisibleRelations(arr)\n    }\n\n    let Semantic_relationship = []\n    let Curated_relationship = []\n    let Hierarchical_structure = []\n\n    // for (let term of props.termEdges) {\n    //     if (term.label == \"Semantic_relationship\") {\n    //         Semantic_relationship.push({label: term.title, value: term.title})\n    //     }\n    //     if (term.label == \"Curated_relationship\") {\n    //         Curated_relationship.push({label: term.title, value: term.title})\n    //     }\n    //     if (term.label == \"Hierarchical_structure\") {\n    //         Hierarchical_structure.push({label: term.title, value: term.title})\n    //     }\n    // }\n\n    const edgeOptions = [\n        {\n            label: 'Semantic_relationship',\n            value: 'Semantic_relationship',\n            children: Semantic_relationship\n        },\n        {\n            label: 'Curated_relationship',\n            value: 'Curated_relationship',\n            children: Curated_relationship\n        },\n        {\n            label: 'Hierarchical_structure',\n            value: 'Hierarchical_structure',\n            children: Hierarchical_structure\n        }\n    ]\n\n    return (\n        <Row>\n            <Col span={12}>\n                <p>\n                    Nodes Type Visibility\n                </p>\n                <Cascader\n                    bordered={false}\n                    style={{\n                        width: '100%',\n                        borderBottom: \"1px solid black\"\n                    }}\n                    options={nodeOptions}\n                    onChange={onChangeNode}\n                    multiple\n                    maxTagCount=\"responsive\"\n                    defaultValue={[['Articles'], ['Anatomy'], ['Chemicals and Drugs'],['Diseases'],['GO'],['Genes and Gene Products'],['Journal'],['Organisms'],['Pathway']]}\n                    placeholder=\"Please select\"\n                />\n            </Col>\n            <Col span={12}>\n            <p>\n                    Edges Type Visibility\n                </p>\n                <Cascader\n                    bordered={false}\n                    style={{\n                        width: '100%',\n                        borderBottom: \"1px solid black\"\n                    }}\n                    options={edgeOptions}\n                    onChange={onChangeEdge}\n                    multiple\n                    maxTagCount=\"responsive\"\n                    defaultValue={[['Semantic_relationship'], ['Curated_relationship'],['Hierarchical_structure']]}\n                    placeholder=\"Please select\"\n                />\n            </Col>\n        </Row>\n  );\n};\nexport default View;\n","import React, { useEffect, useState } from 'react'\nimport './scoped.css'\nimport { Row, Col, Slider, Collapse, Transfer, InputNumber } from 'antd';\nconst { Panel } = Collapse;\n\nconst Filter = props => {\n    const panelStyle = {\n        marginLeft: 10,\n        marginRight: 9,\n        marginBottom: 11,\n        border: 'none',\n        borderRadius: 8,\n        background: '#EEEEEE'\n    };\n\n    /* source is visible nodes, target is invisible nodes */\n\n    const [selectedArticleKeys, setSelectedArticleKeys] = useState([]);\n    const [selectedTermKeys, setSelectedTermKeys] = useState([]);\n    const [selectedRelationKeys, setSelectedRelationKeys] = useState([]);\n    const [invisibleArticleKey, setInvisibleArticleKey] = useState([]);\n    const [invisibleTermKey, setInvisibleTermKey] = useState([]);\n    const [invisibleRelationKey, setInvisibleRelationKey] = useState([]);\n    const onArticleChange = (nextTargetKeys, direction, moveKeys) => {\n        if (direction == \"right\") {\n            let temp = props.visibleArticles\n            for (let key of moveKeys) {\n                temp = temp.filter(item => item.key != key)\n            }\n            props.setVisibleArticles(temp)\n        } else {\n            for (let key of moveKeys) {\n                let temp = props.articleNodes.find(item => item.key == key)\n                props.setVisibleArticles([...props.visibleArticles, temp])\n            }\n        }\n        setInvisibleArticleKey(nextTargetKeys);\n    };\n    const onTermChange = (nextTargetKeys, direction, moveKeys) => {\n        if (direction == \"right\") {\n            let temp = props.visibleTerms\n            for (let key of moveKeys) {\n                temp = temp.filter(item => item.key != key)\n            }\n            props.setVisibleTerms(temp)\n        } else {\n            for (let key of moveKeys) {\n                let temp = props.termNodes.find(item => item.key == key)\n                props.setVisibleTerms([...props.visibleTerms, temp])\n            }\n        }\n        setInvisibleTermKey(nextTargetKeys);\n    };\n    const onRelationChange = (nextTargetKeys, direction, moveKeys) => {\n        if (direction == \"right\") {\n            let temp = props.visibleRelations\n            for (let key of moveKeys) {\n                console.log(key)\n                temp = temp.filter(item => item.key != key)\n            } \n            props.setVisibleRelations(temp)\n        } else {\n            for (let key of moveKeys) {\n                let temp = props.relationNodes.find(item => item.key == key)\n                props.setVisibleRelations([...props.visibleRelations, temp])\n            }\n        }\n        setInvisibleRelationKey(nextTargetKeys);\n    };\n    const onArticleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n        setSelectedArticleKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n    };\n    const onTermSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n        setSelectedTermKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n    };\n    const onRelationSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\n        setSelectedRelationKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n    };\n    const onScroll = (direction, e) => {\n    };\n\n    // minGtdcNoc={props.minGtdcNoc} \n    // maxGtdcNoc={props.maxGtdcNoc} \n\n    return (\n        <Collapse expandIconPosition='end' size='small' ghost defaultActiveKey={1}>\n\n            {/* Article Density Control */}\n            {/* <Panel header=\"Articles Density Control\" key=\"1\">\n                <div>\n                    <div>\n                        <Row>\n                            <Col span={12}>Frequency</Col>\n                            <Col span={6}>\n                                <InputNumber defaultValue={props.minAdcFreq} value={props.adcFreq[0]} onBlur={props.handleAdcFreq1} onPressEnter={props.handleAdcFreq1} min={props.minAdcFreq} max={props.maxAdcFreq}/>\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber defaultValue={props.maxAdcFreq} value={props.adcFreq[1]} onBlur={props.handleAdcFreq2} onPressEnter={props.handleAdcFreq2} min={props.minAdcFreq} max={props.maxAdcFreq}/>\n                            </Col>\n                        </Row>\n                        <Slider range value={props.adcFreq} onChange={props.handleAdcFreq} min={props.minAdcFreq} max={props.maxAdcFreq}/>\n                    </div>\n                    \n                    <div>\n                        <Row>\n                            <Col span={12}>\n                                Publication Date\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber value={props.adcPd[0]} onBlur={props.handleAdcPd1} onPressEnter={props.handleAdcPd1} min={props.minAdcPd} max={props.maxAdcPd}/>\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber value={props.adcPd[1]} onBlur={props.handleAdcPd2} onPressEnter={props.handleAdcPd2} min={props.minAdcPd} max={props.maxAdcPd}/>\n                            </Col>\n                        </Row>\n                        <Slider range value={props.adcPd} onChange={props.handleAdcPd}  min={props.minAdcPd} max={props.maxAdcPd}/>\n                    </div>\n\n                    <div>\n                        <Row>\n                            <Col span={12}>Number of Citations</Col>\n                            <Col span={6}>\n                                <InputNumber value={props.adcNoc[0]} onBlur={props.handleAdcNoc1} onPressEnter={props.handleAdcNoc1} min={props.minAdcNoc} max={props.maxAdcNoc}/>\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber value={props.adcNoc[1]} onBlur={props.handleAdcNoc2} onPressEnter={props.handleAdcNoc2} min={props.minAdcNoc} max={props.maxAdcNoc}/>\n                            </Col>\n                        </Row>\n                        <Slider range value={props.adcNoc} onChange={props.handleAdcNoc} min={props.minAdcNoc} max={props.maxAdcNoc} />\n                    </div>\n                </div>\n            </Panel> */}\n\n            {/* Genomic Terms Density Control */}\n            <Panel header=\"Genomic Terms Density Control\" key=\"1\">\n                <div>\n                    <div>\n                        <Row>\n                            <Col span={12}>Frequency</Col>\n                            <Col span={6}>\n                                <InputNumber defaultValue={props.minGtdcFreq} value={props.gtdcFreq[0]} onBlur={props.handleGtdcFreq1} onPressEnter={props.handleGtdcFreq1} min={props.minGtdcFreq} max={props.maxGtdcFreq}/>\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber defaultValue={props.maxGtdcFreq} value={props.gtdcFreq[1]} onBlur={props.handleGtdcFreq2} onPressEnter={props.handleGtdcFreq2} min={props.minGtdcFreq} max={props.maxGtdcFreq}/>\n                            </Col>\n                        </Row>\n                        <Slider range value={props.gtdcFreq} onChange={props.handleGtdcFreq} min={props.minGtdcFreq} max={props.maxGtdcFreq}/>\n                    </div>\n                    <div>\n                        <Row>\n                            <Col span={12}>Recency</Col>\n                            <Col span={6}>\n                                <InputNumber value={props.adcPd[0]} onBlur={props.handleAdcPd1} onPressEnter={props.handleAdcPd1} min={props.minAdcPd} max={props.maxAdcPd}/>\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber value={props.adcPd[1]} onBlur={props.handleAdcPd2} onPressEnter={props.handleAdcPd2} min={props.minAdcPd} max={props.maxAdcPd}/>\n                            </Col>\n                        </Row>\n                        <Slider range value={props.adcPd} onChange={props.handleAdcPd}  min={props.minAdcPd} max={props.maxAdcPd}/>\n                    </div>\n                    <div>\n                        <Row>\n                            <Col span={12}>Number of Citations</Col>\n                            <Col span={6}>\n                                <InputNumber defaultValue={props.minGtdcNoc} value={props.gtdcNoc[0]} onBlur={props.handleGtdcNoc1} onPressEnter={props.handleGtdcNoc1} min={props.minGtdcNoc} max={props.maxGtdcNoc}/>\n                            </Col>\n                            <Col span={6}>\n                                <InputNumber defaultValue={props.maxGtdcNoc} value={props.gtdcNoc[1]} onBlur={props.handleGtdcNoc2} onPressEnter={props.handleGtdcNoc2} min={props.minGtdcNoc} max={props.maxGtdcNoc}/>\n                            </Col>\n                        </Row>\n                        <Slider range value={props.gtdcNoc} onChange={props.handleGtdcNoc} min={props.minGtdcNoc} max={props.maxGtdcNoc} />\n                    </div>\n                </div>\n            </Panel>\n\n            {/* Articles Visibility */}\n            {/* <Panel header=\"Articles Visibility\" key=\"3\" style={panelStyle}>\n                <div>\n                    <Transfer\n                        dataSource={props.articleNodes}\n                        titles={['Visible Nodes', 'Invisible Nodes']}\n                        targetKeys={invisibleArticleKey}\n                        selectedKeys={selectedArticleKeys}\n                        onChange={onArticleChange}\n                        onSelectChange={onArticleSelectChange}\n                        onScroll={onScroll}\n                        render={(item) => item.title}\n                        showSelectAll = 'false'\n                        showSearch = 'true'\n                    />\n                </div>\n            </Panel>\n\n            {/* Genomic Terms Visibility */}\n            {/* <Panel header=\"Genomic Terms Visibility\" key=\"4\" style={panelStyle}>\n                <div>\n                    <Transfer\n                        dataSource={props.termNodes}\n                        titles={['Visible Nodes', 'Invisible Nodes']}\n                        targetKeys={invisibleTermKey}\n                        selectedKeys={selectedTermKeys}\n                        onChange={onTermChange}\n                        onSelectChange={onTermSelectChange}\n                        onScroll={onScroll}\n                        render={(item) => item.title}\n                        showSelectAll = 'false'\n                        showSearch = 'true'\n                    />\n                </div>\n            </Panel> */}\n\n            {/* Relations Visibility */}\n            {/* <Panel header=\"Relations Visibility\" key=\"5\" style={panelStyle}>\n                <div>\n                    <Transfer\n                        dataSource={props.relationNodes}\n                        titles={['Visible Nodes', 'Invisible Nodes']}\n                        targetKeys={invisibleRelationKey}\n                        selectedKeys={selectedRelationKeys}\n                        onChange={onRelationChange}\n                        onSelectChange={onRelationSelectChange}\n                        onScroll={onScroll}\n                        render={(item) => item.title}\n                        showSelectAll = 'false'\n                        showSearch = 'true'\n                    />\n                </div>\n            </Panel>  */}\n        </Collapse>\n  );\n};\nexport default Filter;\n","import { ConsoleSqlOutlined } from '@ant-design/icons'\nimport axios from 'axios'\n\nexport class NewGraph {\n    constructor() {}\n    async AddNodes(existing, newNode) {\n        console.log('add nodes')\n        let res = []\n        await axios\n            // .get('/1.0/frontend_add_nodes?existing=' + existing + \"&new=\" + newNode)\n            .get('/api//1.0/frontend_add_nodes?existing=' + existing + \"&new=\" + newNode)\n            .then(function (response) {\n                res = response\n            })\n            .catch(function (error) {\n                console.log('error', error)\n            })\n        return res\n    }\n}","import React from 'react';\nimport './scoped.css';\nimport { Transfer, Tree, Button } from 'antd';\nimport { useState } from 'react';\nimport { NewGraph } from '../../service/NewNode'\n\nconst App = (props) => {\n\n    const graphNodes = [];\n    if (props.data.nodes) {\n        for (let i = 0; i < props.data.nodes.length; i++) {\n            graphNodes.push(props.data.nodes[i].data.id)\n        }\n    }\n\n    let existingNodes = []\n    const groupedNodes = {}\n    if (props.allNodes.length != 0) {\n        props.allNodes.forEach((node, index) => {\n            const type = node.type.split(';')[0];\n            if (!groupedNodes[type]) {\n              groupedNodes[type] = { key: type, title: type, children: [] };\n            }\n            groupedNodes[type].children.push({ key: node.id, title: node.name });\n          });\n          \n        existingNodes = Object.values(groupedNodes);\n    }\n    \n    const initRightTreeData = [];\n    if (props.data.nodes) {\n        for (let i = 0; i < props.data.nodes.length; i++) {\n            const node = props.data.nodes[i];\n            const label = node.data.label;\n            const newNode = { key: node.data.id, title: node.data.display };\n\n            const labelData = initRightTreeData.find(group => group.key === label);\n\n            if (labelData) {\n                labelData.children.push(newNode);\n            } else {\n                initRightTreeData.push({ key: label, title: label, children: [newNode] });\n            }\n        }\n    }\n\n    const [targetKeys, setTargetKeys] = useState(graphNodes)\n    const [rightTreeData, setRightTreeData] = useState(initRightTreeData)\n\n    const existingNodeList = []\n    for (var i = 0; i < initRightTreeData.length; i++) {\n        existingNodeList.push(initRightTreeData[i].children.map(child => child.key).join('|'))\n    }\n    const existing = existingNodeList.join('|')\n    const treeData = existingNodes\n    const tableClass = props.isTableOpen ? \"table open\" : \"table\";\n    const generateTree = (treeNodes = [], checkedKeys = []) =>\n            treeNodes.map(({ children, ...props }) => ({\n                ...props,\n                disabled: checkedKeys.includes(props.key),\n                children: generateTree(children, checkedKeys),\n            }))\n \n    const dealCheckboxSeleted = ({ node, onItemSelect, onItemSelectAll }, direction) => {\n        let {\n            checked,\n            halfCheckedKeys,\n            node: { key, children },\n        } = node\n        if (children?.length > 0) {\n            let keys = []\n            let temp = []\n            if (direction === 'left') {\n                let state = false\n                if (rightTreeData.length > 0) {\n                    rightTreeData?.map(item => {\n                        if (item.childCompanies?.length > 0 && (item.key == key)) {\n                            temp = childCompanies.filter(v => !item.childCompanies.some((t => t.key === v.key)))\n                            temp?.forEach(child => {\n                                keys.push(child.key)\n                            })\n                        } else {\n                            state = true\n                        }\n                    })\n                } else {\n                    state = true\n                }\n                if (state) {\n                    children?.forEach(child => {\n                        keys.push(child.key)\n                    })\n                }\n                onItemSelectAll([...keys, key], checked)\n            }\n            if (direction === 'right') {\n                children?.forEach(child => {\n                    keys.push(child.key)\n                })\n                onItemSelectAll([...keys], checked)\n            }\n        } else {\n            if (!checked) {\n                let parentKeys = []\n                parentKeys = [halfCheckedKeys?.[0]] || []\n                if (parentKeys[0] == undefined) {\n                    treeData.forEach(tree => {\n                        if (tree.children) {\n                            tree.children?.forEach(child => {\n                                if (child?.key === key) {\n                                    parentKeys.push(tree?.key)\n                                }\n                            })\n                        }\n                    })\n                }\n                onItemSelectAll([...parentKeys, key], checked)\n            } else {\n                let parentKey = ''\n                treeData.forEach(tree => {\n                    if (tree?.children) {\n                        tree.children?.forEach(child => {\n                            if (child?.key === key) {\n                                parentKey = tree?.key\n                            }\n                        })\n                    }\n                })\n \n                if (!halfCheckedKeys?.includes(parentKey) && parentKey != '') {\n                    onItemSelectAll([key, parentKey], checked)\n                } else {\n                    onItemSelect(key, checked)\n                }\n            }\n        }\n    }\n \n    const TreeTransfer = ({ dataSource, targetKeys, ...restProps }) => {\n        const transferDataSource = []\n        const dataSourceData = dataSource\n        let test = [...rightTreeData]\n        function flatten(list = []) {\n            list.forEach(item => {\n                transferDataSource.push(item)\n                flatten(item.children)\n            })\n        }\n        flatten(dataSource)\n \n        return (\n            <Transfer\n                {...restProps}\n                targetKeys={targetKeys}\n                dataSource={transferDataSource}\n                className=\"tree-transfer\"\n                showSearch\n                showSelectAll={true}\n                render={item => item.title}\n                rowKey={record => record.key}\n                onSearch={(dir, val) => {\n                    let data = (dir === 'left' ? dataSourceData : rightTreeData)\n                    const newDeptList = data?.map(item => {\n                        item = Object.assign({}, item)\n                        if (item.children) {\n                            item.children = item.children?.filter(res => (res.title.indexOf(val) > -1))\n                        }\n                        return item\n                    }).filter(item => {\n                        if (item.children?.length > 0 || val.length == 0) {\n                            item = Object.assign({}, item)\n                            item.children?.filter(e => (\n                                e.title.indexOf(val) > -1 ? '' : item.title.indexOf(val) > -1\n                            ))\n                        } else {\n                            item = item.title.indexOf(val) > -1\n                        }\n                        return item\n                    })\n                    if (dir === 'left') {\n                        dataSource = newDeptList\n                    }\n                    if (dir === 'right') {\n                        test = newDeptList\n                    }\n                }}\n            >\n                {({ direction, onItemSelect, onItemSelectAll, selectedKeys }) => {\n                    if (direction === 'left') {\n                        const checkedKeys = [...selectedKeys, ...targetKeys]\n                        return (\n                            <Tree\n                                height={200}\n                                blockNode\n                                checkable\n                                defaultExpandAll\n                                checkedKeys={checkedKeys}\n                                treeData={generateTree(dataSource, targetKeys)}\n                                fieldNames={{ title: 'title', key: 'key', children: 'children' }}\n                                onCheck={(_, node) => {\n                                    dealCheckboxSeleted({ node, onItemSelect, onItemSelectAll }, direction)\n                                }}\n                                onSelect={(_, node) => {\n                                    dealCheckboxSeleted({ node, onItemSelect, onItemSelectAll }, direction)\n                                }}\n                            />\n                        )\n                    }\n                    if (direction === 'right') {\n                        const checkedKeys = [...selectedKeys]\n                        return (\n                            <Tree\n                                height={200}\n                                blockNode\n                                checkable\n                                defaultExpandAll\n                                checkedKeys={checkedKeys}\n                                treeData={test}\n                                fieldNames={{ title: 'title', key: 'key', children: 'children' }}\n                                onCheck={(_, node) => {\n                                    dealCheckboxSeleted({ node, onItemSelect, onItemSelectAll }, direction)\n                                }}\n                                onSelect={(_, node) => {\n                                    dealCheckboxSeleted({ node, onItemSelect, onItemSelectAll }, direction)\n                                }}\n                            />\n                        )\n                    }\n                }}\n            </Transfer>\n        )\n    }\n    const getRightTreeData = (keys, type) => {\n        let arr = [...rightTreeData]\n        if (keys?.length > 0) {\n            keys.forEach(key => {\n                treeData.forEach(data => {\n                    if (key === data.key) {\n                        let index = arr.findIndex(i => {\n                            return i.key === key\n                        })\n                        if (type === 1) {\n                            if (index === -1) {\n                                arr.push(data)\n                            } else if (index > -1 && arr?.[index]?.children?.length < data?.children?.length) {\n                                arr.splice(index, 1)\n                                arr.push(data)\n                            }\n                        } else if (type === 0) {\n                            if (index > -1) {\n                                arr.splice(index, 1)\n                            }\n                        }\n                    } else {\n                        let selectedParentKey = ''\n                        let selectedObj = {}\n                        if (data?.children?.length > 0) {\n                            data.children.forEach(child => {\n                                if (key === child.key) {\n                                    selectedParentKey = data.key\n                                    selectedObj = child\n                                }\n                            })\n                        }\n                        if (Object.keys(selectedObj)?.length > 0) {\n                            let newData = {}\n                            let index = arr.findIndex(item => {\n                                return item.key === selectedParentKey\n                            })\n                            if (index > -1) {\n                                let oldChildArr = [...arr[index].children]\n                                let selectedIndex = oldChildArr?.findIndex(o => {\n                                    return o.key === selectedObj.key\n                                })\n                                if (selectedIndex === -1 && type === 1) {\n                                    arr[index].children.push(selectedObj)\n                                }\n                                if (selectedIndex > -1 && type === 0) {\n                                    arr[index].children.splice(selectedIndex, 1)\n                                    if (arr[index].children?.length === 0) {\n                                        arr.splice(index, 1)\n                                    }\n                                }\n                            } else {\n                                if (type === 1) {\n                                    newData = { ...data }\n                                    newData.children = []\n                                    newData.children.push(selectedObj)\n                                    arr.push(newData)\n                                } else if (type === 0) {\n                                    arr = []\n                                }\n                            }\n                        }\n                    }\n                })\n            })\n            setRightTreeData(arr)\n        }\n    }\n \n    const onChange = (keys, direction, moveKeys) => {\n        let changeArrType = 1\n        if (direction == 'left') {\n            changeArrType = 0\n            if (keys.length > 0) {\n                treeData.forEach(item => {\n                    let index = keys.indexOf(item.key)\n                    if (index > -1 && item.children?.length > 0) {\n                        item.children?.forEach(v => {\n                            if (moveKeys.includes(v.key)) {\n                                keys.splice(index, 1)\n                            }\n                        })\n                    }\n                })\n            }\n        }\n        setTargetKeys(keys)\n        let keysList = changeArrType === 1 ? keys : moveKeys\n        getRightTreeData(keysList, changeArrType)\n    };\n    \n    async function drawNewGraph(existing, newNode) {\n        let detailServ = new NewGraph()\n        const response = await detailServ.AddNodes(existing, newNode)\n        console.log(response)\n        const newData = JSON.parse(JSON.stringify(props.data));\n        for (var i = 0; i < response.data.nodes.length; i++) {\n            newData.nodes.push({'data': response.data.nodes[i]})\n        }\n        for (var i = 0; i < response.data.links.length; i++) {\n            newData.edges.push({'data': response.data.links[i]})\n        }\n        props.setData(newData)\n    }\n\n    const buttonClick = () => {\n        if (props.isTableOpen) {\n            const rightTreeDataList = []\n            for (var i = 0; i < rightTreeData.length; i++) {\n                rightTreeDataList.push(rightTreeData[i].children.map(child => child.key).join('|'))\n            }\n            const rightTreeNodes = rightTreeDataList.join('|').split('|')\n            const existingNodes = existing.split('|')\n            const newNode = rightTreeNodes.filter(id => !existingNodes.includes(id)).join('|')\n            if (newNode) {\n                console.log(newNode)\n                drawNewGraph(existing, newNode)\n            }\n            props.setGraphData(rightTreeData)\n        }\n    }\n\n    const openTable = () => {\n        if (!props.isTableOpen) {\n            props.toggleTable()\n        }\n    }\n    console.log(rightTreeData)\n    return (\n      <div className={tableClass} style={{width: '80%', marginLeft: '10%', alignItems: 'center'}}>\n        <Button onClick={openTable} type=\"primary\">Add New Nodes</Button>\n        <TreeTransfer dataSource={treeData} targetKeys={targetKeys} onChange={onChange} />\n        <Button onClick={buttonClick} type=\"primary\" style={{marginLeft: '96%'}}>Apply</Button>\n      </div>\n    ) \n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react'\nimport './scoped.css'\nimport { Col, Row, Collapse, InputNumber, Slider, Transfer, DatePicker, Button } from 'antd';\nimport {\n    MenuFoldOutlined,\n    MenuUnfoldOutlined\n} from '@ant-design/icons';\nimport View from './view';\nimport Filter from './filter';\nimport Table from './table'\n\nconst { Panel } = Collapse;\n\nconst Settings = props => {\n    const settingsClass = props.isOpen ? \"settings open\" : \"settings\";\n    const buttonClass = props.isOpen ? \"settings-button open\" : \"settings-button\";\n    return (\n        <div>\n            <div className={settingsClass}>\n                {/* <View\n                    view={props.view}\n                    handleView={props.handleView}\n                    articleNodes={props.articleNodes}\n                    termNodes={props.termNodes}\n                    termEdges={props.termEdges}\n                    setVisibleArticles={props.setVisibleArticles}\n                    setVisibleTerms={props.setVisibleTerms}\n                    setVisibleRelations={props.setVisibleRelations}\n                    visibleArticles={props.visibleArticles}\n                    visibleTerms={props.visibleTerms}\n                    visibleRelations={props.visibleRelations}\n                /> */}\n\n                <Filter\n                    minAdcFreq={props.minAdcFreq}\n                    maxAdcFreq={props.maxAdcFreq}\n                    minAdcPd={props.minAdcPd}\n                    maxAdcPd={props.maxAdcPd}\n                    minAdcNoc={props.minAdcNoc} \n                    maxAdcNoc={props.maxAdcNoc}\n                    minGtdcFreq={props.minGtdcFreq} \n                    maxGtdcFreq={props.maxGtdcFreq} \n                    minGtdcNoc={props.minGtdcNoc} \n                    maxGtdcNoc={props.maxGtdcNoc} \n                    adcFreq={props.adcFreq}\n                    handleAdcFreq={props.handleAdcFreq}\n                    handleAdcFreq1={props.handleAdcFreq1}\n                    handleAdcFreq2={props.handleAdcFreq2}\n                    adcPd={props.adcPd}\n                    handleAdcPd={props.handleAdcPd}\n                    handleAdcPd1={props.handleAdcPd1}\n                    handleAdcPd2={props.handleAdcPd2}\n                    adcNoc={props.adcNoc}\n                    handleAdcNoc={props.handleAdcNoc}\n                    handleAdcNoc1={props.handleAdcNoc1}\n                    handleAdcNoc2={props.handleAdcNoc2}\n                    gtdcFreq={props.gtdcFreq}\n                    handleGtdcFreq={props.handleGtdcFreq}\n                    handleGtdcFreq1={props.handleGtdcFreq1}\n                    handleGtdcFreq2={props.handleGtdcFreq2}\n                    gtdcNoc={props.gtdcNoc}\n                    handleGtdcNoc={props.handleGtdcNoc}\n                    handleGtdcNoc1={props.handleGtdcNoc1}\n                    handleGtdcNoc2={props.handleGtdcNoc2}\n                    setVisibleArticles={props.setVisibleArticles}\n                    setVisibleTerms={props.setVisibleTerms}\n                    setVisibleRelations={props.setVisibleRelations}\n                    articleNodes={props.articleNodes}\n                    termNodes={props.termNodes}\n                    relationNodes={props.relationNodes}\n                    visibleArticles={props.visibleArticles}\n                    visibleTerms={props.visibleTerms}\n                    visibleRelations={props.visibleRelations}\n                />  \n            </div>\n            <Button\n                onClick={props.toggleSidebar}\n                className={buttonClass}\n            >\n                { !props.isOpen ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n            </Button>\n            <Table \n                isTableOpen = {props.isTableOpen}\n                toggleTable = {props.toggleTable}\n                data = {props.data}\n                setData = {props.setData}\n                allNodes = {props.allNodes}\n                setGraphData = {props.setGraphData}\n            />\n        </div>\n        \n  );\n};\nexport default Settings;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Cytoscape from 'cytoscape';\nimport cola from 'cytoscape-cola';\nimport euler from 'cytoscape-euler';\nimport springy from 'cytoscape-springy'\nimport d3Force from 'cytoscape-d3-force';\nimport fcose from 'cytoscape-fcose';\n\nCytoscape.use(fcose);\nCytoscape.use(cola);\nCytoscape.use(euler);\nCytoscape.use(d3Force);\nCytoscape.use(springy);\n\nfunction Graph(props) {\n\n  const [width, setWith] = useState('100%');\n  const [height, setHeight] = useState('80vh');\n \n  useEffect(() => {\n    let curMinAdcFreq = Number.MAX_SAFE_INTEGER;\n    let curMaxAdcFreq = Number.MIN_SAFE_INTEGER;\n    let curMinAdcPd = Number.MAX_SAFE_INTEGER;\n    let curMaxAdcPd = Number.MIN_SAFE_INTEGER;\n    let curMinAdcNoc = Number.MAX_SAFE_INTEGER;\n    let curMaxAdcNoc = Number.MIN_SAFE_INTEGER;\n    let curMinGtdcFreq = Number.MAX_SAFE_INTEGER;\n    let curMaxGtdcFreq = Number.MIN_SAFE_INTEGER;\n    let curMinGtdcNoc = Number.MAX_SAFE_INTEGER;\n    let curMaxGtdcNoc = Number.MIN_SAFE_INTEGER;\n    let articleArray = [];\n    let termArray = [];\n    let relationArray = [];\n    const articleSet = new Set();\n    const termSet = new Set();\n    const relationSet = new Set();\n    for (let i of props.data.nodes) {\n      if (i.data.label == \"Article\") {\n        curMinAdcFreq = Math.min(curMinAdcFreq, i.data.frequency);\n        curMaxAdcFreq = Math.max(curMaxAdcFreq, i.data.frequency);\n        curMinAdcPd = Math.min(curMinAdcPd, i.data.date);\n        curMaxAdcPd = Math.max(curMaxAdcPd, i.data.date);\n        curMinAdcNoc = Math.min(curMinAdcNoc, i.data.n_citation);\n        curMaxAdcNoc = Math.max(curMaxAdcNoc, i.data.n_citation);\n        if (!articleSet.has(i.data.display)) {\n          let temp = {\n            key: (articleArray.length + 1).toString(),\n            title: i.data.display,\n            description: 'article'\n          }\n          articleArray.push(temp)\n          articleSet.add(i.data.display)\n        }\n      }\n      else if (i.data.label != \"Event\") {\n        curMinGtdcFreq = Math.min(curMinGtdcFreq, i.data.frequency);\n        curMaxGtdcFreq = Math.max(curMaxGtdcFreq, i.data.frequency);\n        curMinGtdcNoc = Math.min(curMinGtdcNoc, i.data.n_citation);\n        curMaxGtdcNoc = Math.max(curMaxGtdcNoc, i.data.n_citation);\n        if (!termSet.has(i.data.display)) {\n          let temp = {\n            key: (termArray.length + 1).toString(),\n            title: i.data.display,\n            description: 'genomic',\n            label: i.data.label\n          }\n          termArray.push(temp)\n          termSet.add(i.data.display)\n        }\n      }\n      else {\n        if (!articleSet.has(i.data.display)) {\n          let temp = {\n            key: (articleArray.length + 1).toString(),\n            title: i.data.display\n          }\n          articleArray.push(temp);\n          articleSet.add(i.data.display);\n        }\n      }\n    }\n    for (let i of props.data.edges) {\n      if (!relationSet.has(i.data.label)) {\n        let temp = {\n          key: (relationArray.length + 1).toString(),\n          title: i.data.label\n        }\n        relationArray.push(temp);\n        relationSet.add(i.data.label);\n      }\n      if (i.data.dates.length != 0) {\n        curMinAdcPd = Math.min(curMinAdcPd, i.data.dates[0].year);\n        curMaxAdcPd = Math.max(curMaxAdcPd, i.data.dates[0].year);\n      }\n    }\n    props.handleMinAdcFreq(curMinAdcFreq);\n    props.handleMaxAdcFreq(curMaxAdcFreq);\n    props.handleAdcFreq([curMinAdcFreq, curMaxAdcFreq]);\n    props.handleMinAdcPd(curMinAdcPd);\n    props.handleMaxAdcPd(curMaxAdcPd);\n    props.handleAdcPd([curMinAdcPd, curMaxAdcPd]);\n    props.handleMinAdcNoc(curMinAdcNoc);\n    props.handleMaxAdcNoc(curMaxAdcNoc);\n    props.handleAdcNoc([curMinAdcNoc, curMaxAdcNoc]);\n    props.handleMinGtdcFreq(curMinGtdcFreq);\n    props.handleMaxGtdcFreq(curMaxGtdcFreq);\n    props.handleGtdcFreq([curMinGtdcFreq, curMaxGtdcFreq]);\n    props.handleMinGtdcNoc(curMinGtdcNoc);\n    props.handleMaxGtdcNoc(curMaxGtdcNoc);\n    props.handleGtdcNoc([curMinGtdcNoc, curMaxGtdcNoc]);\n    props.setArticleNodes(articleArray);\n    props.setVisibleArticles(articleArray);\n    props.setTermNodes(termArray);\n    props.setVisibleTerms(termArray);\n    props.setRelationNodes(relationArray);\n    props.setVisibleRelations(relationArray);\n  }, [props.data]);\n\n  \n  let articleView={\"edges\":[], \"nodes\":[]}\n  let termView={\"edges\":[], \"nodes\":[]}\n  let articleTermView={\"edges\":[], \"nodes\":[]}\n  for (var i in props.data.nodes) {\n    if (props.data.nodes[i].data.label === \"Article\") {\n      articleView.nodes.push(props.data.nodes[i])\n    }\n    if (props.data.nodes[i].data.label !== \"Article\" && props.data.nodes[i].data.label !== \"Event\" ) {\n      termView.nodes.push(props.data.nodes[i])\n    }\n    if (props.data.nodes[i].data.label !== \"Event\" ) {\n      articleTermView.nodes.push(props.data.nodes[i])\n    }\n  }\n  for (var i in props.data.edges) {\n    if (props.data.edges[i].data.label === \"Cite\") {\n      articleView.edges.push(props.data.edges[i])\n    }\n    if (props.data.edges[i].data.label !== \"Cite\" && props.data.edges[i].data.label !== \"Contain_vocab\" ) {\n      if (termView.nodes.includes(props.data.nodes.find((node) => node.data.id === props.data.edges[i].data.source)) && termView.nodes.includes(props.data.nodes.find((node) => node.data.id === props.data.edges[i].data.target))) {\n        termView.edges.push(props.data.edges[i])\n      }\n    }\n    if (props.data.edges[i].data.label === \"Contain_vocab\") {\n      articleTermView.edges.push(props.data.edges[i])\n    }\n  }\n  // console.log(articleView)\n  \n  const graphData = useMemo(() => {\n    let elements = {edges: [], nodes: []}\n    for (let i in props.data.nodes) {\n      let node = props.data.nodes[i].data\n      if (node.frequency >= props.gtdcFreq[0] && node.frequency <= props.gtdcFreq[1] && \n          node.n_citation >= props.gtdcNoc[0] && node.n_citation <= props.gtdcNoc[1] &&\n          props.visibleTerms.find(item => item.title === node.display)) {\n            elements.nodes.push(props.data.nodes[i])\n          }\n    }\n\n    for (let i in props.data.edges) {\n      let edge = props.data.edges[i].data\n      if (elements.nodes.find((node) => node.data.id === edge.source) != undefined &&\n      elements.nodes.find((node) => node.data.id === edge.target) != undefined &&\n      props.visibleRelations.find(item => item.title === edge.label)) {\n        elements.edges.push(props.data.edges[i])\n      }\n    }\n    if (elements.edges.length != 0) {\n      for (let i = 0; i < elements.edges.length; i++) {\n        elements.edges[i].data.weight = 0;\n        if (elements.edges[i].data.dates.length != 0) {\n          for (var j = 0; j < elements.edges[i].data.dates.length; j++) {\n            if (elements.edges[i].data.dates[j].year >= props.adcPd[0] && elements.edges[i].data.dates[j].year <= props.adcPd[1]) {\n              elements.edges[i].data.weight += elements.edges[i].data.dates[j].weight;\n            }\n          }\n        }\n        if (elements.edges[i].data.weight <= 0) {\n          elements.edges[i].data.weight = 1;\n        }\n      }\n    }\n    return elements;\n  }, [props.adcFreq, props.adcPd, props.adcNoc, props.gtdcFreq, props.gtdcNoc, props.visibleArticles, props.visibleTerms, props.visibleRelations])\n\n  let label = [['Anatomy', 0],['Article', 0],['Chemicals and Drugs', 0],['Diseases', 0],['GO', 0],['Genes and Gene Products', 0],['Journal', 0],['Organisms', 0],['Pathway', 0]]\n  let id = []\n  for (var i in graphData.nodes) {\n    if (label.find(pair => pair.includes(graphData.nodes[i].data.label)) == undefined) {\n      label.push([graphData.nodes[i].data.label, graphData.nodes[i].data.frequency])\n    }\n    if (label.find(pair => pair.includes(graphData.nodes[i].data.label))[1] < graphData.nodes[i].data.frequency) {\n      label.find(pair => pair.includes(graphData.nodes[i].data.label))[1] = graphData.nodes[i].data.frequency\n    }\n    id.push([graphData.nodes[i].data.id, graphData.nodes[i].data.label, graphData.nodes[i].data.frequency])\n  }\n  // console.log(label)\n  const colorDif = 360 / 9\n  // console.log(eventStyle)\n\n  // console.log(graphData);\n\n  const layout = {\n    name: 'cola',\n    egdeLengthVal: 45,\n    nodeSpacing: 5,\n    bundleEdges: true,\n    // fit: true,\n    // circle: true,\n    // directed: true,\n    // padding: 50,\n    // // spacingFactor: 1.5,\n    animate: false,\n    animationDuration: 1,\n    // avoidOverlap: true,\n    // nodeDimensionsIncludeLabels: false,\n  };\n\n  const styleSheet = [\n    // {\n    //   selector: 'node[label = \"Event\"]',\n    //   style: {\n    //     backgroundColor: 'hsl(0, 100%, 50%)',\n    //     width: 10,\n    //     height: 10,\n    //     label: 'data(name)',\n\n    //     // \"width\": \"mapData(score, 0, 0.006769776522008331, 20, 60)\",\n    //     // \"height\": \"mapData(score, 0, 0.006769776522008331, 20, 60)\",\n    //     // \"text-valign\": \"center\",\n    //     // \"text-halign\": \"center\",\n    //     'overlay-padding': '8px',\n    //     'z-index': '10',\n    //     //text props\n    //     'text-outline-color': '#4a56a6',\n    //     'text-outline-width': '2px',\n    //     color: 'white',\n    //     fontSize: 10,\n    //   },\n    // },\n    {\n      selector: 'node.hover',\n      style: {\n        'border-width': '6px',\n        'border-color': '#AAD8FF',\n        'border-opacity': '0.5',\n        'background-color': '#77828C',\n        width: 10,\n        height: 10,\n        //text props\n        'text-outline-color': '#77828C',\n        'text-outline-width': 8,\n      },\n    },\n    {\n      selector: \"node[type='device']\",\n      style: {\n        shape: 'rectangle',\n      },\n    },\n    {\n      selector: 'edge[label=\"Contain_vocab\"]',\n      style: {\n        \"curve-style\": \"haystack\",\n        // \"curve-style\": \"unbundled-bezier\",\n    // \"control-point-distances\": 120,\n    // \"control-point-weights\": 0.2,\n        'width': 1,\n        'opacity': 'mapData(weight, 1, 100, 0.1, 1)',\n        // length: 1,\n        // \"line-color\": \"#6774cb\",\n        'line-color': '#FF7F50',\n        // 'target-arrow-color': '#6774cb',\n        // 'target-arrow-shape': 'triangle',\n        // 'curve-style': 'bezier',\n      },\n    },\n    {\n      selector: 'edge[label=\"co_occur\"]',\n      style: {\n        \"curve-style\": \"haystack\",\n        // \"curve-style\": \"unbundled-bezier\",\n    // \"control-point-distances\": 120,\n    // \"control-point-weights\": 0.2,\n    'width': 1,\n    'opacity': 'mapData(weight, 1, 100, 0.1, 1)',\n        // length: 1,\n        // \"line-color\": \"#6774cb\",\n        'line-color': '#008080',\n        // 'target-arrow-color': '#6774cb',\n        // 'target-arrow-shape': 'triangle',\n        // 'curve-style': 'bezier',\n      },\n    },\n    {\n      selector: 'edge[label=\"Semantic_relationship\"]',\n      style: {\n        \"curve-style\": \"haystack\",\n        // \"curve-style\": \"unbundled-bezier\",\n    // \"control-point-distances\": 120,\n    // \"control-point-weights\": 0.2,\n        width: 1,\n        'opacity': 'mapData(weight, 1, 100, 0.1, 1)',\n        // length: 1,\n        // \"line-color\": \"#6774cb\",\n        'line-color': '#008080',\n        // 'target-arrow-color': '#6774cb',\n        // 'target-arrow-shape': 'triangle',\n        // 'curve-style': 'bezier',\n      },\n    },\n    {\n      selector: 'edge[label=\"Hierarchical_structure\"]',\n      style: {\n        \"curve-style\": \"haystack\",\n        // \"curve-style\": \"unbundled-bezier\",\n    // \"control-point-distances\": 120,\n    // \"control-point-weights\": 0.2,\n        width: 1,\n        'opacity': 'mapData(weight, 1, 100, 0.1, 1)',\n        // length: 1,\n        // \"line-color\": \"#6774cb\",\n        'line-color': '#E0B0FF',\n        // 'target-arrow-color': '#6774cb',\n        // 'target-arrow-shape': 'triangle',\n        // 'curve-style': 'bezier',\n      },\n    },\n    {\n      selector: 'edge[label=\"Curated_relationship\"]',\n      style: {\n        \"curve-style\": \"haystack\",\n        // \"curve-style\": \"unbundled-bezier\",\n    // \"control-point-distances\": 120,\n    // \"control-point-weights\": 0.2,\n        'width': 1,\n        'opacity': 'mapData(weight, 1, 100, 0.1, 1)',\n        // length: 1,\n        // \"line-color\": \"#6774cb\",\n        'line-color': '#E0B0FF',\n        // 'target-arrow-color': '#6774cb',\n        // 'target-arrow-shape': 'triangle',\n        // 'curve-style': 'bezier',\n      },\n    },\n    {\n      selector: 'node.highlight',\n      style: {\n          'border-color': '#FFF',\n          'border-width': '2px'\n      }\n    },\n    {\n        selector: 'node.semitransp',\n        style:{ 'opacity': '0.5' }\n    },\n    {\n        selector: 'edge.highlight',\n        style: { 'mid-target-arrow-color': '#FFF' }\n    },\n    {\n        selector: 'edge.semitransp',\n        style:{ 'opacity': '0.2' }\n    }\n  ];\n  for (var i in id) {\n    const index = label.findIndex((pair) => {\n      return pair[0] === id[i][1]\n    })\n    let labelColor = ''\n    switch(id[i][1]) {\n      case 'Anatomy':\n        labelColor = '#E43333'\n      break;\n      case 'Chemicals and Drugs':\n        labelColor = '#E8882F'\n      break;\n      case 'Diseases':\n        labelColor = '#67BE48'\n      break;\n      case 'Genes and Gene Products':\n        labelColor = '#46ACAC'\n      break;\n      case 'GO':\n        labelColor = '#5782C2'\n      break;\n      case 'Organisms':\n        labelColor = '#9B58C5'\n      break;\n      case 'Pathway':\n        labelColor = '#D829B1'\n      break;\n    }\n    // console.log(index)\n    styleSheet.push({\n      selector: 'node[id = \"' + id[i][0] + '\"]',\n      style: {\n        backgroundColor: labelColor, \n        backgroundOpacity: 1, \n        // backgroundColor: 'hsl(' + index*colorDif + ', 100%, ' + 50/label[index][1] * id[i][2] + '%)',\n        width: 10,\n        height: 10,\n        label: 'data(display)',\n        // height: 1+Math.log(id[i][2]),\n        // width: 1+Math.log(id[i][2]),\n        // \"width\": \"mapData(score, 0, 0.006769776522008331, 20, 60)\",\n        // \"height\": \"mapData(score, 0, 0.006769776522008331, 20, 60)\",\n        // \"text-valign\": \"center\",\n        // \"text-halign\": \"center\",\n        'overlay-padding': '8px',\n        'z-index': '10',\n        //text props\n        'text-outline-color': 'white',\n        'text-outline-width': '2px',\n        color: '#666666',\n        fontSize: 10,\n      },\n    })\n  }\n  // console.log(styleSheet)\n\n  let myCyRef;\n  return (\n      <div>\n        <div>\n          <CytoscapeComponent\n            key={JSON.stringify(graphData)}\n            elements={CytoscapeComponent.normalizeElements(graphData)}\n            // pan={{ x: 200, y: 200 }}\n            style={{ width: width, height: height }}\n            zoomingEnabled={true}\n            maxZoom={2}\n            minZoom={0.5}\n            autounselectify={false}\n            boxSelectionEnabled={true}\n            layout={layout}\n            stylesheet={styleSheet}\n            cy={(cy) => {\n              myCyRef = cy;\n              cy.unbind(\"click\");\n              // cy.bind(\"click\", props.handleSelectNode)\n    //         cy.nodes('[label = \"Event\"]').style({'background-color': 'white',\n    // 'color': 'black'});\n              // cy.on('mouseover', 'node', function(e){\n              //     var sel = e.target;\n              //     cy.elements().difference(sel.incomers()).not(sel).addClass('semitransp');\n              //     sel.addClass('highlight').incomers().addClass('highlight');\n              // });\n              cy.on('click', function(e){\n                var sel = e.target;\n                if (sel.isNode) {\n                  sel.visibility = 'hidden'\n                  cy.elements().removeClass('semitransp');\n                  cy.elements().removeClass('highlight');\n                  cy.elements().difference(sel.outgoers().union(sel.incomers())).not(sel).addClass('semitransp');\n                  sel.addClass('highlight').outgoers().union(sel.incomers()).addClass('highlight');\n\n                  // Reduce opacity of non-highlighted elements\n                  \n                }\n                if (sel === cy) {\n                  cy.elements().removeClass('semitransp');\n                  cy.elements().removeClass('highlight');\n                  if (props.informationOpen) {\n                    props.handleInformation();\n                  }\n                  props.closeTable();\n                }\n              });\n              cy.on('mouseover', 'node', function(e){\n                  var sel = e.target;\n                  sel.addClass('hover');\n              });\n              cy.on('mouseout', 'node', function(e){\n                  var sel = e.target;\n                  sel.removeClass('hover');\n              });\n              cy.bind('click', 'node', (evt) => {\n                var node = evt.target;\n                props.handleSelect(node.data());\n                if (!props.informationOpen) {\n                  props.handleInformation();\n                }\n              });\n              cy.bind('click', 'edge', (evt) => {\n                var edge = evt.target;\n                console.log(edge.data());\n                props.handleSelect(edge.data());\n                if (!props.informationOpen) {\n                  props.handleInformation();\n                }\n              });\n            }}\n          />\n        </div>\n      </div>\n  );\n}\n\nexport default Graph","import React, { useEffect } from \"react\";\nimport './scoped.css'\nimport { Checkbox, Row, Col } from 'antd';\nimport { useState } from \"react\";\n\nfunction Term(props) {\n    return (\n        <div className=\"term-container\">\n            <Row className=\"termClass\">\n                <Col className=\"termTitle\" span={10}>Entity ID:</Col>\n                <Col className=\"termContent\" span={14}>{props.entity_id}</Col>\n            </Row>\n            <Row className=\"termClass\">\n                <Col className=\"termTitle\" span={10}>Name:</Col>\n                <Col className=\"termContent\" span={14}>{props.name}</Col>\n            </Row>\n            <Row className=\"termClass\">\n                <Col className=\"termTitle\" span={10}>Aliases:</Col>\n                <Col className=\"termContent\" span={14}>\n                    {(props.aliases.map((alias, index) => {\n                        return (\n                        <span>\n                            {alias}; \n                        </span>\n                        )\n                    }))}\n                </Col>\n            </Row>\n            <Row className=\"termClass\">\n                <Col className=\"termTitle\" span={10}>Description:</Col>\n                <Col className=\"termContent\" span={14}>{props.description}</Col>\n            </Row>\n            <Row className=\"termClass\">\n                <Col className=\"termTitle\" span={10}>Type:</Col>\n                <Col className=\"termContent\" span={14}>\n                {(props.type.map((temp_type, index) => {\n                        return (\n                        <span>\n                            {temp_type}; \n                        </span>\n                        )\n                    }))}\n                </Col>\n            </Row>\n            <Row className=\"termClass\">\n                <Col className=\"termTitle\" span={10}>External ID:</Col>\n                <Col className=\"termContent\" span={14}>\n                {Object.entries(props.external_id).map(([key, values]) => (\n                    <Row>\n                        <Col>{key}: </Col>\n                        <Col>\n                        {values.map((value, index) => (\n                            <span>{value};</span>\n                        ))}\n                        </Col>\n                    </Row>\n                ))}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Term","import React, { useState, useEffect } from 'react'\nimport './scoped.css'\nimport Article from './article'\nimport Term from './term'\nimport { DetailService } from '../../service/Detail'\nimport { Button } from 'antd';\nimport {\n    ConsoleSqlOutlined,\n    MenuFoldOutlined,\n    MenuUnfoldOutlined\n} from '@ant-design/icons';\n\nconst Information = props => {\n    const informationClass = props.isOpen ? \"information open\" : \"information\";\n    const buttonClass = props.isOpen ? \"information-button open\" : \"information-button\";\n    const relatedClass = props.isOpen ? \"related open\" : \"related\";\n    const [nodeDetail, setNodeDetail] = useState({});\n    const [edgeDetail, setEdgeDetail] = useState({});\n\n    const handleClick = (event, link) => {\n        event.preventDefault();\n        window.open(link, '_blank');\n    };\n\n    useEffect(() => {\n        setNodeDetail({});\n        setEdgeDetail({});\n        async function searchInfoNode(content) {\n            let detailServ = new DetailService()\n            const response = await detailServ.Nid2Detail(content)\n            setNodeDetail(response.data)\n            setEdgeDetail({})\n        }\n        async function searchInfoEdge(content) {\n            let detailServ = new DetailService()\n            console.log(content)\n            const response = await detailServ.Eid2Detail(content)\n            console.log(response.data)\n            setEdgeDetail(response.data)\n            setNodeDetail({})\n        }\n        if (props.detailId) {\n            if (!Array.isArray(props.detailId)) {\n                searchInfoNode(props.detailId);\n            }\n            else{\n                searchInfoEdge(props.detailId[0]);\n            }\n        }\n    }, [props.detailId]);\n    \n\n    const nodeForMap = (url) => {\n        return(\n            <div>\n                <a href={url[1]} onClick={(event) => handleClick(event, url[1])}>{url[0]}</a>\n            </div>\n        )\n    }\n    const urls = Object.keys(nodeDetail).length !== 0 ? nodeDetail[1].map(nodeForMap) : []\n\n    const edgeUrl = (url) => {\n        return(\n            <div>\n                <a href={url[1]} onClick={(event) => handleClick(event, url[1])}>{url[0]}</a>\n            </div>\n        )\n    }\n    const edgeUrls = Object.keys(edgeDetail).length !== 0 ? edgeDetail[0][1].map(edgeUrl) : []\n\n    \n    function renderExternal() {\n        if (Object.keys(nodeDetail).length !== 0) {\n            const elements = [];\n            for (const source in nodeDetail[0].external_sources) {\n                elements.push(\n                    <div>\n                      {source}: {nodeDetail[0].external_sources[source]}\n                    </div>\n                );\n            }\n            return elements;\n        }\n    }\n    if (Object.keys(nodeDetail).length !== 0) {\n        // console.log(nodeDetail[0])\n    }\n    // if (!detail) {\n    //     return <div>Loading</div>\n    // }\n\n//     return (\n//         <div>\n//             <div className={informationClass}>\n//                 {Object.keys(props.detail).length != 0 && props.detailType == \"article\" && (\n//                     <Article\n//                         title={props.detail.title}\n//                         authors={props.detail.authors}\n//                         pmid={props.detail.pmid}\n//                         abstract={props.detail.abstract}\n//                         abstract_list={props.detail.abstract_list}\n//                     />\n//                 )}\n//                 {Object.keys(props.detail).length != 0 && props.detailType == \"term\" && (\n//                     <Term\n//                         entity_id={props.detail.element_id}\n//                         name={props.detail.name}\n//                         aliases={props.detail.aliases}\n//                         description={props.detail.description}\n//                         type={props.detail.type}\n//                         external_id={props.detail.external_sources}\n//                     />\n//                 )}\n//             </div>\n//             <Button\n//                 onClick={props.toggleSidebar}\n//                 className={buttonClass}\n//             >\n//                 { !props.isOpen ? <MenuFoldOutlined /> : <MenuUnfoldOutlined />}\n//             </Button>\n//         </div>\n        \n//   );\n        return (\n            <div>\n                <div className={informationClass}>\n                    {/* {Object.keys(detail).length != 0 && props.detailType == \"article\" && 'title' in detail && (\n                        <Article\n                            title={detail.title}\n                            authors={detail.authors}\n                            pmid={detail.pmid}\n                            abstract={detail.abstract}\n                            abstract_list={detail.abstract_list}\n                        />\n                    )}\n                    {Object.keys(detail).length != 0 && props.detailType == \"term\" && 'element_id' in detail && (\n                        <Term\n                            entity_id={detail.element_id}\n                            name={detail.name}\n                            aliases={detail.aliases}\n                            description={detail.description}\n                            type={detail.type}\n                            external_id={detail.external_sources}\n                        />\n                    )} */}\n                    {Object.keys(nodeDetail).length == 0 && Object.keys(edgeDetail).length == 0 && (\n                       <div className='article-container'>\n                            <div>Loading</div>\n                       </div>\n                    )}\n                    {Object.keys(nodeDetail).length != 0 && (\n                        <div className='article-container'>\n                            <div className='article-titile'>Entity ID: {nodeDetail[0].element_id}</div>\n                            <div className='article-titile'>Name: {nodeDetail[0].name}</div>\n                            <div className='article-titile'>Aliases: {nodeDetail[0].aliases}</div>\n                            <div className='article-titile'>Description: {nodeDetail[0].description}</div>\n                            <div className='article-titile'>Type: {nodeDetail[0].type}</div>\n                            <div className='article-titile'>\n                            External ID: {renderExternal()}\n                            </div>\n                        </div>\n                    )}\n                    {Object.keys(edgeDetail).length != 0 && (\n                        <div className='article-container'>\n                            <div className='article-titile'>Node 1: {edgeDetail[0][0].node1}</div>\n                            <div className='article-titile'>Node 2: {edgeDetail[0][0].node2}</div>\n                            <div className='article-titile'>relationship label: {edgeDetail[0][0]['relationship label']}</div>\n                            <div className='article-titile'>relationship type: {edgeDetail[0][0]['relationship type']}</div>\n                            <div className='article-titile'>number of citations: {edgeDetail[0][0]['number of citations']}</div>\n                        </div>\n                    )}\n                    \n                </div>\n                <Button\n                    onClick={props.toggleSidebar}\n                    className={buttonClass}\n                >\n                    { !props.isOpen ? <MenuFoldOutlined /> : <MenuUnfoldOutlined />}\n                </Button>\n                <div className={relatedClass}>\n                    {/* {Object.keys(detail).length != 0 && props.detailType == \"article\" && 'title' in detail && (\n                        <Article\n                            title={detail.title}\n                            authors={detail.authors}\n                            pmid={detail.pmid}\n                            abstract={detail.abstract}\n                            abstract_list={detail.abstract_list}\n                        />\n                    )}\n                    {Object.keys(detail).length != 0 && props.detailType == \"term\" && 'element_id' in detail && (\n                        <Term\n                            entity_id={detail.element_id}\n                            name={detail.name}\n                            aliases={detail.aliases}\n                            description={detail.description}\n                            type={detail.type}\n                            external_id={detail.external_sources}\n                        />\n                    )} */}\n                    {Object.keys(nodeDetail).length != 0 && (\n                        <div className='article-container'>\n                            <div className='article-titile'>Related Articles</div>\n                            {urls}\n                        </div>\n                    )} \n                    {Object.keys(edgeDetail).length != 0 && (\n                        <div className='article-container'>\n                            <div className='article-titile'>Related Articles</div>\n                            {edgeUrls}\n                        </div>\n                    )}\n                    \n                </div>\n            </div>\n            \n            \n      );\n};\nexport default Information;\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { CypherService } from '../../service/Cypher'\nimport { DetailService } from '../../service/Detail'\nimport 'antd/dist/reset.css';\nimport { Col, Row, Input, Spin, Tag} from 'antd';\nimport { TweenOneGroup } from 'rc-tween-one';\nimport './scoped.css'\nimport GLKBLogoImg from '../../img/glkb_logo.png'\nimport UMLogo from '../../img/um_logo.jpg'\nimport queryString from 'query-string'\nimport Settings from \"../Settings\";\nimport Graph from \"../Graph\";\nimport Information from '../Information';\nimport axios from 'axios'\n// import graphData from '../Graph/test_graph.json';\n\nconst { Search } = Input;\n\nconst ResultPage = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const alltags = urlParams.get('q');\n    const otags = alltags.split('|')\n    const [tags, setTags] = useState(otags);\n    const [detailType, setDetailType] = useState([]);\n    const [detail, setDetail] = useState({});\n    const [detailId, setDetailId] = useState(null);\n    const [allNodes, setAllNodes] = useState([]);\n    const [data, setData] = useState({});\n    const [graphData, setGraphData] = useState();\n\n    // view setting\n    const [view, setView] = useState(\"concentric\");\n    const handleView = (props) => {\n        setView(props.target.value);\n    };\n\n    /* ====== range initialization functions ====== */\n    const [minAdcFreq, setMinAdcFreq] = useState(Infinity);\n    const handleMinAdcFreq = (value) => {\n        setMinAdcFreq(value);\n    }\n    const [maxAdcFreq, setMaxAdcFreq] = useState(-1);\n    const handleMaxAdcFreq = (value) => {\n        setMaxAdcFreq(value);\n    }\n    const [minAdcPd, setMinAdcPd] = useState(Infinity);\n    const handleMinAdcPd = (value) => {\n        setMinAdcPd(value)\n    }\n    const [maxAdcPd, setMaxAdcPd] = useState(-1);\n    const handleMaxAdcPd = (value) => {\n        setMaxAdcPd(value)\n    }\n    const [minAdcNoc, setMinAdcNoc] = useState(Infinity);\n    const handleMinAdcNoc = (value) => {\n        setMinAdcNoc(value)\n    }\n    const [maxAdcNoc, setMaxAdcNoc] = useState(-1);\n    const handleMaxAdcNoc = (value) => {\n        setMaxAdcNoc(value)\n    }\n    const [minGtdcFreq, setMinGtdcFreq] = useState(Infinity);\n    const handleMinGtdcFreq = (value) => {\n        setMinGtdcFreq(value)\n    }\n    const [maxGtdcFreq, setMaxGtdcFreq] = useState(-1);\n    const handleMaxGtdcFreq = (value) => {\n        setMaxGtdcFreq(value)\n    }\n    const [minGtdcNoc, setMinGtdcNoc] = useState(Infinity);\n    const handleMinGtdcNoc = (value) => {\n        setMinGtdcNoc(value)\n    }\n    const [maxGtdcNoc, setMaxGtdcNoc] = useState(-1);\n    const handleMaxGtdcNoc = (value) => {\n        setMaxGtdcNoc(value)\n    }\n\n    /* ====== range activation functions ====== */\n    // Article Density Control params\n    // frequency\n    const [adcFreq, setAdcFreq] = useState([0, 0]);\n    const handleAdcFreq = (range) => {\n        setAdcFreq(range);\n    }\n    const handleAdcFreq1 = (props) => {\n        let value = parseInt(props.target.value);\n        setAdcFreq([value, adcFreq[1]]);\n    }\n    const handleAdcFreq2 = (props) => {\n        let value = parseInt(props.target.value);\n        setAdcFreq([adcFreq[0], value]);\n    }\n\n    // publication date\n    const [adcPd, setAdcPd] = useState([0, 0]);\n    const handleAdcPd = (range) => {\n        setAdcPd(range);\n    }\n    const handleAdcPd1 = (props) => {\n        let value = parseInt(props.target.value);\n        setAdcPd([value, adcPd[1]]);\n    }\n    const handleAdcPd2 = (props) => {\n        let value = parseInt(props.target.value);\n        setAdcPd([adcPd[0], value]);\n    }\n\n    // number of citations\n    const [adcNoc, setAdcNoc] = useState([0, 0]);\n    const handleAdcNoc = (range) => {\n        setAdcNoc(range);\n    }\n    const handleAdcNoc1 = (props) => {\n        let value = parseInt(props.target.value);\n        setAdcNoc([value, adcNoc[1]]);\n    }\n    const handleAdcNoc2 = (props) => {\n        let value = parseInt(props.target.value);\n        setAdcNoc([adcNoc[0], value]);\n    }\n\n    // Genomic Terms Density Control\n    // frequency\n    const [gtdcFreq, setGtdcFreq] = useState([0, 0]);\n    const handleGtdcFreq = (range) => {\n        setGtdcFreq(range);\n    }\n    const handleGtdcFreq1 = (props) => {\n        let value = parseInt(props.target.value);\n        setGtdcFreq([value, gtdcFreq[1]]);\n    }\n    const handleGtdcFreq2 = (props) => {\n        let value = parseInt(props.target.value);\n        setGtdcFreq([gtdcFreq[0], value]);\n    }\n\n    // number of citations\n    const [gtdcNoc, setGtdcNoc] = useState([0 ,0]);\n    const handleGtdcNoc = (range) => {\n        setGtdcNoc(range);\n    }\n    const handleGtdcNoc1 = (props) => {\n        let value = parseInt(props.target.value);\n        setGtdcNoc([value, gtdcNoc[1]]);\n    }\n    const handleGtdcNoc2 = (props) => {\n        let value = parseInt(props.target.value);\n        setGtdcNoc([gtdcNoc[0], value]);\n    }\n\n    /* ====== node type ====== */\n    const [articleNodes, setArticleNodes] = useState([]);\n    const [termNodes, setTermNodes] = useState([]);\n    const [relationNodes, setRelationNodes] = useState([]);\n    const [visibleArticles, setVisibleArticles] = useState([]);\n    const [visibleTerms, setVisibleTerms] = useState([]);\n    const [visibleRelations, setVisibleRelations] = useState([]);\n\n\n\n    const [results, setResults] = useState([])\n    const [articles, setArticles] = useState({})\n    const [label, setLabel] = useState(0)\n    const [searchFlag, setSearchFlag] = useState(false)\n    const [articleFlag, setArticleFlag] = useState(false)\n    const [query, setQuery] = useState('')\n    \n\n    const [settingsOpen, setSettingsOpen] = useState(false);\n    const [informationOpen, setInformationOpen] = useState(false);\n    const [tableOpen, setTableOpen] = useState(false);\n    const [graphShownData, setGraphShownData] = useState();\n\n    useEffect(() => {\n        const parsed = location.search.slice(3)\n        console.log(parsed)\n        if (parsed) {\n            setResults([])\n            setQuery(parsed)\n            search(parsed)\n        } else {\n            setResults([])\n        }\n    }, [location])\n\n    const initialize = () => {\n        setResults([])\n        setArticles({})\n        setLabel(0)\n        setSearchFlag(false)\n        setArticleFlag(false)\n        setQuery('')\n    }\n\n    async function search(content) {\n        setSearchFlag(false)\n        nevigate(`/result?q=${content}`)\n        let cypherServ = new CypherService()\n        const response = await cypherServ.Article2Cypher(content)\n        console.log('function -> ', response)\n        // setData(graphData)\n        setData(response.data[0])\n        setAllNodes(response.data[1])\n        setSearchFlag(true)\n    }\n\n    useEffect(() => {\n        let nodeIdsToKeep = []\n        if (graphData) {\n            console.log(data)\n            console.log(graphData)\n            for (var i = 0; i < graphData.length; i++) {\n                for (var j = 0; j < graphData[i].children.length; j++) {\n                    nodeIdsToKeep.push(graphData[i].children[j].key)\n                }\n            }\n            const filteredNodes = data.nodes.filter(node => nodeIdsToKeep.includes(node.data.id));\n            const filteredEdges = data.edges.filter(edge =>\n            nodeIdsToKeep.includes(edge.data.source) && nodeIdsToKeep.includes(edge.data.target)\n            );\n            const filteredData = {\n                nodes: filteredNodes,\n                edges: filteredEdges\n            };\n            setGraphShownData(filteredData)\n        } else {\n            if (data.edges) {\n                setGraphShownData(data)\n            }\n        }\n    }, [graphData, data])\n\n    async function searchArticle(item) {\n        let res = []\n        var config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            params: {\n                pmid: item.pmid\n            }\n        }\n        await axios\n            // .get('/api/article', config)\n            .get('/article', config)\n            .then(function (response) {\n                // console.log(response)\n                res = response\n                let highlight = generateHighlight(res.data.abstract_list)\n                item.abstract_list = res.data.abstract_list\n                item.highlight = highlight\n                setArticles(item)\n                setArticleFlag(true)\n            })\n            .catch(function (error) {\n                // console.log('error', error)\n            })\n    }\n\n    async function handleSelect(target) {\n        let temp_id\n        if (target.article_source) {\n            temp_id = [target.eid[0], 0];\n        } else {\n            temp_id = target.id\n        }\n        console.log(temp_id)\n        setDetailId(temp_id);\n        // console.log(temp_id)\n        // console.log(\"2\")\n        // searchInfo(temp_id)\n    }\n\n    const addArticle = index => {\n        results.filter(async (item) => {\n                    if (item.id - 1 === index) {\n                        searchArticle(item)\n                    }\n                })\n    }\n    \n    const generateHighlight = (abstract_list) => {\n        let highlight = []\n        for (let item of abstract_list) {\n            if (item[1] != \"none\" && !highlight.includes(item[1])) {\n                highlight.push(item[1])\n            }\n        }\n        return highlight\n    }\n\n    let nevigate = useNavigate();\n    const backHome = async (v) => {\n        nevigate(`/`)\n    }\n\n    const handleSearch = async (v) => {\n        initialize()\n        nevigate(`/result?q=${v}`)\n        search(v)\n    }\n\n    const handleSettings = () => {\n        setSettingsOpen(!settingsOpen);\n    };\n\n    const handleInformation = () => {\n        setInformationOpen(!informationOpen);\n    };\n\n    const handleTable = () => {\n        setTableOpen(true);\n    }\n\n    const closeTable = () => {\n        setTableOpen(false);\n    }\n\n    const handleClose = (removedTag) => {\n        const newTags = tags.filter((tag) => tag !== removedTag);\n        console.log(newTags);\n        if (newTags.length == 0) {\n            backHome()\n            return;\n        }\n        setTags(newTags);\n        const alltags = newTags.join(\"|\")\n        console.log(alltags)\n        // console.log(v)\n        initialize()\n        nevigate(`/result?q=${alltags}`)\n        search(alltags)\n    };\n    \n    const forMap = (tag) => {\n    const tagElem = (\n        <Tag\n        closable\n        onClose={(e) => {\n            e.preventDefault();\n            handleClose(tag);\n        }}\n        style={{ border: '1px solid #4F4F4F', borderRadius: '18px' }}\n        >\n        {tag}\n        </Tag>\n    );\n    return (\n        <span key={tag} style={{ display: 'inline-block' }}>\n        {tagElem}\n        </span>\n    );\n    };\n\n    const tagChild = tags.map(forMap);\n    console.log(graphShownData)\n    return (\n        <div className=\"result-container\">\n\n            {/* Navigation Bar */}\n            <div className=\"heading-container\">\n                <Row>\n                    <Col span={7}>\n                        <div className=\"GLKB-container\">\n                            <img className='GLKBLogo' src={GLKBLogoImg} onClick={backHome}/>\n                        </div> \n                    </Col>\n                    <Col span={10}>\n                        <div className=\"heading-search\">\n                            <Search placeholder=\"input search text\" enterButton=\"Search\" onSearch={search} defaultValue={query}/>\n                        </div>\n                    </Col>\n                    <Col span={7}>\n                        <div className=\"UM-container\">\n                            <img className='UMLogo' src={UMLogo}/>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n\n            {/* Filter Bar */}\n            <div className=\"line\"></div>\n\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '45px'}}>\n                <div style={{ textAlign: 'left', width: '600px', padding: '20px', background: '#F6F6F6', borderRadius: '14px'}}>\n                    <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                        <span style={{ marginRight: '20px' }}>Term List:</span>\n                        <TweenOneGroup\n                            enter={{\n                                scale: 0.8,\n                                opacity: 0,\n                                type: 'from',\n                                duration: 100,\n                            }}\n                            onEnd={(e) => {\n                                if (e.type === 'appear' || e.type === 'enter') {\n                                    e.target.style = 'display: inline-block';\n                                }\n                            }}\n                            leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n                            appear={false}\n                        >\n                            {tagChild}\n                        </TweenOneGroup>\n                    </div>\n                </div>\n            </div>\n            {/* Main Content */}\n            <div className='main-content'>\n                {!searchFlag && (\n                    <div className='loading-container'>\n                        <Spin size='large'/>\n                    </div>\n                )}\n                {searchFlag && (\n                    <div className='result-content'>\n                        <Graph\n                            data={graphShownData}\n                            view={view}\n                            minAdcFreq={minAdcFreq}\n                            maxAdcFreq={maxAdcFreq}\n                            minAdcPd={minAdcPd}\n                            maxAdcPd={maxAdcPd}\n                            minAdcNoc={minAdcNoc} \n                            maxAdcNoc={maxAdcNoc}\n                            minGtdcFreq={minGtdcFreq} \n                            maxGtdcFreq={maxGtdcFreq} \n                            minGtdcNoc={minGtdcNoc} \n                            maxGtdcNoc={maxGtdcNoc}\n                            adcFreq={adcFreq}\n                            handleAdcFreq={handleAdcFreq}\n                            handleMinAdcFreq={handleMinAdcFreq}\n                            handleMaxAdcFreq={handleMaxAdcFreq}\n                            closeTable={closeTable}\n                            adcPd={adcPd}\n                            handleAdcPd={handleAdcPd}\n                            handleMinAdcPd={handleMinAdcPd}\n                            handleMaxAdcPd={handleMaxAdcPd}\n                            adcNoc={adcNoc}\n                            handleAdcNoc={handleAdcNoc}\n                            handleMinAdcNoc={handleMinAdcNoc} \n                            handleMaxAdcNoc={handleMaxAdcNoc}\n                            gtdcFreq={gtdcFreq}\n                            handleGtdcFreq={handleGtdcFreq}\n                            handleMinGtdcFreq={handleMinGtdcFreq} \n                            handleMaxGtdcFreq={handleMaxGtdcFreq}\n                            gtdcNoc={gtdcNoc}\n                            handleGtdcNoc={handleGtdcNoc}\n                            handleMinGtdcNoc={handleMinGtdcNoc} \n                            handleMaxGtdcNoc={handleMaxGtdcNoc}\n                            setArticleNodes={setArticleNodes}\n                            setTermNodes={setTermNodes}\n                            setRelationNodes={setRelationNodes}\n                            setVisibleArticles={setVisibleArticles}\n                            setVisibleTerms={setVisibleTerms}\n                            setVisibleRelations={setVisibleRelations}\n                            visibleArticles={visibleArticles}\n                            visibleTerms={visibleTerms}\n                            visibleRelations={visibleRelations}\n                            setDetailType={setDetailType}\n                            // setDetail={setDetail}\n                            handleSelect={handleSelect}\n                            handleInformation={handleInformation}\n                            informationOpen={informationOpen}\n                        />\n                        <span>\n                            <Settings\n                                minAdcFreq={minAdcFreq}\n                                maxAdcFreq={maxAdcFreq}\n                                minAdcPd={minAdcPd}\n                                maxAdcPd={maxAdcPd}\n                                minAdcNoc={minAdcNoc} \n                                maxAdcNoc={maxAdcNoc}\n                                minGtdcFreq={minGtdcFreq} \n                                maxGtdcFreq={maxGtdcFreq} \n                                minGtdcNoc={minGtdcNoc} \n                                maxGtdcNoc={maxGtdcNoc} \n                                isOpen={settingsOpen}\n                                isTableOpen = {tableOpen}\n                                toggleSidebar={handleSettings}\n                                toggleTable = {handleTable}\n                                view={view}\n                                handleView={handleView}\n                                adcFreq={adcFreq}\n                                handleAdcFreq={handleAdcFreq}\n                                handleAdcFreq1={handleAdcFreq1}\n                                handleAdcFreq2={handleAdcFreq2}\n                                adcPd={adcPd}\n                                handleAdcPd={handleAdcPd}\n                                handleAdcPd1={handleAdcPd1}\n                                handleAdcPd2={handleAdcPd2}\n                                adcNoc={adcNoc}\n                                handleAdcNoc={handleAdcNoc}\n                                handleAdcNoc1={handleAdcNoc1}\n                                handleAdcNoc2={handleAdcNoc2}\n                                gtdcFreq={gtdcFreq}\n                                handleGtdcFreq={handleGtdcFreq}\n                                handleGtdcFreq1={handleGtdcFreq1}\n                                handleGtdcFreq2={handleGtdcFreq2}\n                                gtdcNoc={gtdcNoc}\n                                handleGtdcNoc={handleGtdcNoc}\n                                handleGtdcNoc1={handleGtdcNoc1}\n                                handleGtdcNoc2={handleGtdcNoc2}\n                                setVisibleArticles={setVisibleArticles}\n                                setVisibleTerms={setVisibleTerms}\n                                setVisibleRelations={setVisibleRelations}\n                                articleNodes={articleNodes}\n                                termNodes={termNodes}\n                                relationNodes={relationNodes}\n                                visibleArticles={visibleArticles}\n                                visibleTerms={visibleTerms}\n                                visibleRelations={visibleRelations}\n                                data={data}\n                                allNodes={allNodes}\n                                setData={setData}\n                                setGraphData={setGraphData}\n                            />\n                        </span>\n                        <span>\n                            <Information\n                                isOpen={informationOpen}\n                                toggleSidebar={handleInformation}\n                                detailType={detailType}\n                                detail={detail}\n                                detailId={detailId}\n                            />\n                        </span>\n                    </div>\n                )}\n                \n            </div>\n        </div>\n        \n    )\n}\n\nexport default ResultPage\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport HomePage from './components/HomePage'\nimport { Provider } from 'react-globally'\nimport { createBrowserHistory } from 'history';\n\nimport ResultPage from './components/ResultPage'\nimport { Result } from 'antd'\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\n// const browserHistory = createBrowserHistory();\nconst initState = {\n    searchType: ''\n}\n\nReactDOM.render(\n    // <React.StrictMode>\n    //     <Provider globalState={initState}>\n    //             {/* <App /> */}\n    //             {/* <HomePage /> */}\n    //             {/* <ResultPage /> */}\n    //             {/* <ArticlePage /> */}\n    //             {/* <EntityPage /> */}\n                <Router>\n                    <Routes>\n                        <Route path='/result' element={<ResultPage />} />\n                        <Route eaxt path=\"/\" element={<HomePage />} />\n                    </Routes>\n                </Router>,\n    //     </Provider>\n    // </React.StrictMode>\n    // <HomePage />,\n    // <ResultPage />,\n    document.getElementById('root')\n)"],"sourceRoot":""}